@using PagedList.Mvc
@model WebCafeteria.Web.ViewModels.Proveedor.ProveedorListSortVm

@{
    ViewBag.Title = "Index";
}
<div class="d-flex justify-content-between">
    <h2>Proveedores</h2>
    <p>
        <a class="btn btn-primary" href="@Url.Action("Create","Proveedores")">
            <i class="fa fa-plus"></i>
            Nuevo
        </a>
    </p>
</div>
@if (TempData["Msg"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Msg"].ToString()
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

}
@using (Html.BeginForm("Index", "Proveedores", FormMethod.Get))
{
    <div class="row">
        <div class="col-auto">
            <label>Ordenar:</label>
        </div>
        <div class="col-auto">
            @Html.DropDownListFor(model => Model.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Seleccione Orden", new { @class = "form-select" })
        </div>
        <div class="col-auto">
            <input type="text" placeholder="Buscar...." name="SearchBy" class="form-control" />
        </div>
        <div class="col-auto">
            <input type="submit" name="SortBy" value="Aplicar" class="btn btn-secondary" />
        </div>
    </div>

}
<table class="table table-bordered table-hover mt-3">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Proveedores.FirstOrDefault().NombreProveedor)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Proveedores.FirstOrDefault().Pais)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Proveedores.FirstOrDefault().Ciudad)
        </th>
        <th style="text-align:right">
            @Html.DisplayNameFor(model => model.Proveedores.FirstOrDefault().CantidadProductos)
        </th>

        <th class="w-25">Acciones</th>
    </tr>

    @foreach (var item in Model.Proveedores)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NombreProveedor)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Pais)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Ciudad)
            </td>
            <td style="text-align:right">
                @Html.DisplayFor(modelItem => item.CantidadProductos)
            </td>

            <td>
                <a class="btn btn-sm btn-warning" href="@Url.Action("Edit","Proveedores",new {id=item.ProveedorId})">
                    <i class="fa fa-edit"></i>
                    Editar
                </a>
                <a class="btn btn-sm btn-info" href="@Url.Action("Details","Proveedores",new {id=item.ProveedorId})">
                    <i class="fa fa-edit"></i>
                    Detalles
                </a>
                <a class="btn btn-sm btn-danger" href="@Url.Action("Delete","Proveedores", new {id=item.ProveedorId})">
                    <i class="fa fa-trash"></i>
                    Borrar
                </a>
            </td>
        </tr>
    }

</table>
Página: @(Model.Proveedores.PageCount < Model.Proveedores.PageNumber ? 0 : Model.Proveedores.PageNumber) de: @Model.Proveedores.PageCount
@Html.PagedListPager(Model.Proveedores, page => Url.Action("Index", new
{
    page,
    pageSize = ViewBag.PageSize,
    SortBy = Model.SortBy,
    SearchBy = Model.SearchBy
}))



@*@using PagedList.Mvc

    @model PagedList.IPagedList<WebCafeteria.Web.ViewModels.Proveedor.ProveedorListVm>

    @{
        ViewBag.Title = "Index";
    }
    <div class="d-flex justify-content-between ">
        <h2>Proveedores</h2>
        <p>
            <a class="btn btn-primary" href="@Url.Action("Create","Proveedores")">
                <i class="fa fa-plus"></i>
                Nuevo
            </a>
        </p>
    </div>
    @if (TempData["Msg"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["Msg"].ToString()
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>

    }
    @using (@Html.BeginForm("Index", "Proveedores", FormMethod.Get))
    {
        <div class="row">
            <div class="col-auto">
                <label>Mostrar:</label>
            </div>
            <div class="col-auto">
                <select name="PageSize" class="form-select">
                    <option @if (((int)ViewBag.PageSize).ToString() == "5") { @Html.Raw("selected") ; } value="5">5</option>
                    <option @if (((int)ViewBag.PageSize).ToString() == "10") { @Html.Raw("selected") ; } value="10">10</option>
                    <option @if (((int)ViewBag.PageSize).ToString() == "15") { @Html.Raw("selected") ; } value="15">15</option>
                    <option @if (((int)ViewBag.PageSize).ToString() == "20") { @Html.Raw("selected") ; } value="20">20</option>
                </select>
            </div>
            <div class="col-auto">
                <button class="btn btn-secondary" type="submit">
                    <i class="fa fa-search"></i>
                    Aplicar
                </button>
            </div>
        </div>
    }



    <table class="table table-bordered table-hover  mt-3">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().NombreProveedor)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Pais)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FirstOrDefault().Ciudad)
            </th>
            <th class="w-25">Acciones</th>
        </tr>

        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.NombreProveedor)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Pais)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Ciudad)
                </td>
                <td>
                    <a class="btn btn-sm btn-warning" href="@Url.Action("Edit","Proveedores",new {id=item.ProveedorId})">
                        <i class="fa fa-edit"></i>
                        Editar
                    </a>

                    <a class="btn btn-sm btn-danger" href="@Url.Action("Delete","Proveedores", new {id=item.ProveedorId})">
                        <i class="fa fa-trash"></i>
                        Borrar
                    </a>
                </td>
            </tr>
        }

    </table>
        Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de: @Model.PageCount
        @Html.PagedListPager(Model, page => Url.Action("Index", new
    {
        page,
        pageSize = ViewBag.PageSize

    }))*@

