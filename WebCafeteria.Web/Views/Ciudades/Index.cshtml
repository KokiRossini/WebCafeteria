@using PagedList.Mvc

@model WebCafeteria.Web.ViewModels.Ciudad.CiudadFiltroVm

@{
    ViewBag.Title = "Index";
}
<div class="d-flex justify-content-between">
    <h2>Ciudades</h2>
    <p>
        <a class="btn btn-primary" href="@Url.Action("Create","Ciudades")">
            <i class="fa fa-plus"></i>
            Nuevo
        </a>
    </p>
</div>
@if (TempData["Msg"] != null)
{
    <div class="alert alert-success alert-dismissible fade show" role="alert">
        @TempData["Msg"].ToString()
        <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
    </div>

}
@using (Html.BeginForm("Index", "Ciudades", FormMethod.Get))
{
    <div class="d-flex">
        <div class="m-1">
            <div class="row">
                <div class="col-auto">
                    <label>Pais:</label>
                </div>
                <div class="col-auto">
                    @Html.DropDownListFor(model => model.PaisFiltro, Model.Paises, "Ver Todos", new { @class = "form-select" })
                </div>
            </div>
        </div>
        <div class="m-1">
            <div class="row">
                <div class="col-auto">
                    <label>Mostrar:</label>
                </div>
                <div class="col-auto">
                    <select name="PageSize" class="form-select">
                        <option @if (((int)ViewBag.PageSize).ToString() == "5") { @Html.Raw("selected") ; } value="5">5</option>
                        <option @if (((int)ViewBag.PageSize).ToString() == "10") { @Html.Raw("selected") ; } value="10">10</option>
                        <option @if (((int)ViewBag.PageSize).ToString() == "15") { @Html.Raw("selected") ; } value="15">15</option>
                        <option @if (((int)ViewBag.PageSize).ToString() == "20") { @Html.Raw("selected") ; } value="20">20</option>
                    </select>
                </div>
                <div class="col-auto">
                    <button class="btn btn-secondary" type="submit">
                        <i class="fa fa-search"></i>
                        Aplicar
                    </button>
                </div>
            </div>
        </div>




    </div>
}


<table class="table table-bordered table-hover  mt-3 ">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Ciudades[0].NombreCiudad)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Ciudades[0].NombrePais)
        </th>
        <th class="w-25"> Acciones</th>
    </tr>

    @foreach (var item in Model.Ciudades)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.NombreCiudad)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NombrePais)
            </td>
            <td>
                <a class="btn btn-sm btn-warning" href="@Url.Action("Edit","Ciudades",new {id=item.CiudadId})">
                    <i class="fa fa-edit"></i>
                    Editar
                </a>
                <a class="btn btn-sm btn-danger" href="@Url.Action("Delete","Ciudades", new {id=item.CiudadId})">
                    <i class="fa fa-trash"></i>
                    Borrar
                </a>
            </td>
        </tr>
    }

</table>
    Página: @(Model.Ciudades.PageCount < Model.Ciudades.PageNumber ? 0 : Model.Ciudades.PageNumber) de: @Model.Ciudades.PageCount
    @Html.PagedListPager(Model.Ciudades, page => Url.Action("Index", new
{
    page,
    pageSize = ViewBag.PageSize

}))


    @*@using PagedList.Mvc

        @model PagedList.IPagedList<WebCafeteria.Web.ViewModels.Ciudad.CiudadListVm>

        @{
            ViewBag.Title = "Index";
        }
        <div class="d-flex justify-content-between">
            <h2>Ciudades</h2>
            <p>
                <a class="btn btn-primary" href="@Url.Action("Create","Ciudades")">
                    <i class="fa fa-plus"></i>
                    Nuevo
                </a>
            </p>
        </div>
        @if (TempData["Msg"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["Msg"].ToString()
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>

        }
        @using (@Html.BeginForm("Index", "Ciudades", FormMethod.Get))
        {
            <div class="row">
                <div class="col-auto">
                    <label>Mostrar:</label>
                </div>
                <div class="col-auto">
                    <select name="PageSize" class="form-select">
                        <option @if (((int)ViewBag.PageSize).ToString() == "5") { @Html.Raw("selected") ; } value="5">5</option>
                        <option @if (((int)ViewBag.PageSize).ToString() == "10") { @Html.Raw("selected") ; } value="10">10</option>
                        <option @if (((int)ViewBag.PageSize).ToString() == "15") { @Html.Raw("selected") ; } value="15">15</option>
                        <option @if (((int)ViewBag.PageSize).ToString() == "20") { @Html.Raw("selected") ; } value="20">20</option>
                    </select>
                </div>
                <div class="col-auto">
                    <button class="btn btn-secondary" type="submit">
                        <i class="fa fa-search"></i>
                        Aplicar
                    </button>
                </div>
            </div>
        }


        <table class="table table-bordered table-hover  mt-3 ">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().NombreCiudad)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstOrDefault().NombrePais)
                </th>
                <th class="w-25"> Acciones</th>
            </tr>

            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.NombreCiudad)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NombrePais)
                    </td>
                    <td>
                        <a class="btn btn-sm btn-warning" href="@Url.Action("Edit","Ciudades",new {id=item.CiudadId})">
                            <i class="fa fa-edit"></i>
                            Editar
                        </a>
                        <a class="btn btn-sm btn-danger" href="@Url.Action("Delete","Ciudades", new {id=item.CiudadId})">
                            <i class="fa fa-trash"></i>
                            Borrar
                        </a>
                    </td>
                </tr>
            }

        </table>
            Página: @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de: @Model.PageCount
            @Html.PagedListPager(Model, page => Url.Action("Index", new
        {
            page,
            pageSize = ViewBag.PageSize

        }))*@
